// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: route.proto

package apisix

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RouteStatus Enumerations.
type Route_RouteStatus int32

const (
	Route_Disable Route_RouteStatus = 0
	Route_Enable  Route_RouteStatus = 1
)

// Enum value maps for Route_RouteStatus.
var (
	Route_RouteStatus_name = map[int32]string{
		0: "Disable",
		1: "Enable",
	}
	Route_RouteStatus_value = map[string]int32{
		"Disable": 0,
		"Enable":  1,
	}
)

func (x Route_RouteStatus) Enum() *Route_RouteStatus {
	p := new(Route_RouteStatus)
	*p = x
	return p
}

func (x Route_RouteStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Route_RouteStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_route_proto_enumTypes[0].Descriptor()
}

func (Route_RouteStatus) Type() protoreflect.EnumType {
	return &file_route_proto_enumTypes[0]
}

func (x Route_RouteStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Route_RouteStatus.Descriptor instead.
func (Route_RouteStatus) EnumDescriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{0, 0}
}

// [#protodoc-title: The Apache APISIX Route configuration]
// A Route contains multiple parts but basically can be grouped
// into three:
// 1). Route match, fields like uris, hosts, remote_addrs are the
// predicates to indicate whether a request can hit the route.
// 2). Route action, upstream_id specifies the backend upstream
// object, which guides Apache APISIX how to route request.
// 3). Plugins, plugins will run before/after the route action,
// some plugins are "terminated" so may be request will be returned
// on the APISIX side (like authentication failures).
// It's not totally equivalent to the jsonschema definition
// in Apache APISIX's code base since there are some historical
// considerations there which are not used here anymore.
type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URI array used to do the route match.
	// At least one item should be configured and each of them cannot be
	// duplicated.
	Uris []string `protobuf:"bytes,1,rep,name=uris,proto3" json:"uris,omitempty"`
	// The route name, it's useful for the logging but it's not required.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The route id, can be an int64 value or a string matching the specific pattern.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Textual descriptions used to describe the route use.
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	// Priority of this route, used to decide which route should be used when
	// multiple routes contains same URI.
	// Larger value means higher priority. The default value is 0.
	Priority int32 `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	// HTTP Methods used to do the route match.
	Methods []string `protobuf:"bytes,6,rep,name=methods,proto3" json:"methods,omitempty"`
	// Host array used to do the route match.
	Hosts []string `protobuf:"bytes,7,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// Remote address array used to do the route match.
	RemoteAddrs []string `protobuf:"bytes,8,rep,name=remote_addrs,json=remoteAddrs,proto3" json:"remote_addrs,omitempty"`
	// Nginx vars used to do the route match.
	Vars []*Var `protobuf:"bytes,9,rep,name=vars,proto3" json:"vars,omitempty"`
	// Embedded plugins.
	Plugins *Plugins `protobuf:"bytes,10,opt,name=plugins,proto3" json:"plugins,omitempty"`
	// The referred service id.
	ServiceId string `protobuf:"bytes,11,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// The referred upstream id.
	UpstreamId string `protobuf:"bytes,12,opt,name=upstream_id,json=upstreamId,proto3" json:"upstream_id,omitempty"`
	// The route status.
	Status Route_RouteStatus `protobuf:"varint,13,opt,name=status,proto3,enum=Route_RouteStatus" json:"status,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{0}
}

func (x *Route) GetUris() []string {
	if x != nil {
		return x.Uris
	}
	return nil
}

func (x *Route) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Route) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Route) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Route) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Route) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *Route) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *Route) GetRemoteAddrs() []string {
	if x != nil {
		return x.RemoteAddrs
	}
	return nil
}

func (x *Route) GetVars() []*Var {
	if x != nil {
		return x.Vars
	}
	return nil
}

func (x *Route) GetPlugins() *Plugins {
	if x != nil {
		return x.Plugins
	}
	return nil
}

func (x *Route) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *Route) GetUpstreamId() string {
	if x != nil {
		return x.UpstreamId
	}
	return ""
}

func (x *Route) GetStatus() Route_RouteStatus {
	if x != nil {
		return x.Status
	}
	return Route_Disable
}

var File_route_proto protoreflect.FileDescriptor

var file_route_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x04, 0x0a,
	0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x72, 0x69, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x18, 0x01,
	0x52, 0x04, 0x75, 0x72, 0x69, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x02, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x6a, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x50, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x18, 0x01, 0xfa, 0x42, 0x45, 0x92, 0x01, 0x42,
	0x22, 0x40, 0x72, 0x3e, 0x52, 0x03, 0x47, 0x45, 0x54, 0x52, 0x04, 0x50, 0x4f, 0x53, 0x54, 0x52,
	0x03, 0x50, 0x55, 0x54, 0x52, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x52, 0x05, 0x50, 0x41,
	0x54, 0x43, 0x48, 0x52, 0x04, 0x48, 0x45, 0x41, 0x44, 0x52, 0x07, 0x4f, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x53, 0x52, 0x07, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x52, 0x05, 0x54, 0x52, 0x41,
	0x43, 0x45, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x05, 0x68,
	0x6f, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x42, 0x2c, 0xfa, 0x42, 0x09, 0x92,
	0x01, 0x06, 0x08, 0x01, 0x18, 0x01, 0x28, 0x01, 0xfa, 0x42, 0x1d, 0x92, 0x01, 0x1a, 0x22, 0x18,
	0x72, 0x16, 0x32, 0x14, 0x5e, 0x5c, 0x2a, 0x3f, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x7a, 0x41,
	0x2d, 0x5a, 0x2d, 0x2e, 0x5f, 0x5d, 0x2b, 0x24, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x12,
	0x2f, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x18,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x73,
	0x12, 0x18, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04,
	0x2e, 0x56, 0x61, 0x72, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x07, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x52, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x26, 0x0a, 0x0b, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x10, 0x01, 0x42, 0x1a, 0x5a, 0x18, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x69, 0x78, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_route_proto_rawDescOnce sync.Once
	file_route_proto_rawDescData = file_route_proto_rawDesc
)

func file_route_proto_rawDescGZIP() []byte {
	file_route_proto_rawDescOnce.Do(func() {
		file_route_proto_rawDescData = protoimpl.X.CompressGZIP(file_route_proto_rawDescData)
	})
	return file_route_proto_rawDescData
}

var file_route_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_route_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_route_proto_goTypes = []interface{}{
	(Route_RouteStatus)(0), // 0: Route.RouteStatus
	(*Route)(nil),          // 1: Route
	(*Var)(nil),            // 2: Var
	(*Plugins)(nil),        // 3: Plugins
}
var file_route_proto_depIdxs = []int32{
	2, // 0: Route.vars:type_name -> Var
	3, // 1: Route.plugins:type_name -> Plugins
	0, // 2: Route.status:type_name -> Route.RouteStatus
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_route_proto_init() }
func file_route_proto_init() {
	if File_route_proto != nil {
		return
	}
	file_base_proto_init()
	file_plugins_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_route_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_route_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_route_proto_goTypes,
		DependencyIndexes: file_route_proto_depIdxs,
		EnumInfos:         file_route_proto_enumTypes,
		MessageInfos:      file_route_proto_msgTypes,
	}.Build()
	File_route_proto = out.File
	file_route_proto_rawDesc = nil
	file_route_proto_goTypes = nil
	file_route_proto_depIdxs = nil
}
