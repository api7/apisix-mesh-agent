// Code generated by protoc-gen-go. DO NOT EDIT.
// source: route.proto

package apisix

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/envoyproxy/protoc-gen-validate/validate"
import any "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// RouteStatus Enumerations.
type Route_RouteStatus int32

const (
	Route_Disable Route_RouteStatus = 0
	Route_Enable  Route_RouteStatus = 1
)

var Route_RouteStatus_name = map[int32]string{
	0: "Disable",
	1: "Enable",
}
var Route_RouteStatus_value = map[string]int32{
	"Disable": 0,
	"Enable":  1,
}

func (x Route_RouteStatus) String() string {
	return proto.EnumName(Route_RouteStatus_name, int32(x))
}
func (Route_RouteStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_route_35e27dbdd3ab048b, []int{0, 0}
}

// [#protodoc-title: The Apache APISIX Route configuration]
// A Route contains multiple parts but basically can be grouped
// into three:
// 1). Route match, fields like uris, hosts, remote_addrs are the
// predicates to indicate whether a request can hit the route.
// 2). Route action, upstream_id specifies the backend upstream
// object, which guides Apache APISIX how to route request.
// 3). Plugins, plugins will run before/after the route action,
// some plugins are "terminated" so may be request will be returned
// on the APISIX side (like authentication failures).
// It's not totally equivalent to the jsonschema definition
// in Apache APISIX's code base since there are some historical
// considerations there which are not used here anymore.
type Route struct {
	// URI array used to do the route match.
	// At least one item should be configured and each of them cannot be
	// duplicated.
	Uris []string `protobuf:"bytes,1,rep,name=uris,proto3" json:"uris,omitempty"`
	// The route name, it's useful for the logging but it's not required.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The route id, can be an int64 value or a string matching the specific pattern.
	Id *ID `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Textual descriptions used to describe the route use.
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	// Priority of this route, used to decide which route should be used when
	// multiple routes contains same URI.
	// Larger value means higher priority. The default value is 0.
	Priority int32 `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	// HTTP Methods used to do the route match.
	Methods []string `protobuf:"bytes,6,rep,name=methods,proto3" json:"methods,omitempty"`
	// Host array used to do the route match.
	Hosts []string `protobuf:"bytes,7,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// Remote address array used to do the route match.
	RemoteAddrs []string `protobuf:"bytes,8,rep,name=remote_addrs,json=remoteAddrs,proto3" json:"remote_addrs,omitempty"`
	// Nginx vars used to do the route match.
	Vars []*Var `protobuf:"bytes,9,rep,name=vars,proto3" json:"vars,omitempty"`
	// Embedded plugins.
	Plugins *any.Any `protobuf:"bytes,10,opt,name=plugins,proto3" json:"plugins,omitempty"`
	// The referred service id.
	ServiceId *ID `protobuf:"bytes,11,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// The referred upstream id.
	UpstreamId *ID `protobuf:"bytes,12,opt,name=upstream_id,json=upstreamId,proto3" json:"upstream_id,omitempty"`
	// The route status.
	Status               Route_RouteStatus `protobuf:"varint,13,opt,name=status,proto3,enum=Route_RouteStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_route_35e27dbdd3ab048b, []int{0}
}
func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (dst *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(dst, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetUris() []string {
	if m != nil {
		return m.Uris
	}
	return nil
}

func (m *Route) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Route) GetId() *ID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Route) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Route) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Route) GetMethods() []string {
	if m != nil {
		return m.Methods
	}
	return nil
}

func (m *Route) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *Route) GetRemoteAddrs() []string {
	if m != nil {
		return m.RemoteAddrs
	}
	return nil
}

func (m *Route) GetVars() []*Var {
	if m != nil {
		return m.Vars
	}
	return nil
}

func (m *Route) GetPlugins() *any.Any {
	if m != nil {
		return m.Plugins
	}
	return nil
}

func (m *Route) GetServiceId() *ID {
	if m != nil {
		return m.ServiceId
	}
	return nil
}

func (m *Route) GetUpstreamId() *ID {
	if m != nil {
		return m.UpstreamId
	}
	return nil
}

func (m *Route) GetStatus() Route_RouteStatus {
	if m != nil {
		return m.Status
	}
	return Route_Disable
}

func init() {
	proto.RegisterType((*Route)(nil), "Route")
	proto.RegisterEnum("Route_RouteStatus", Route_RouteStatus_name, Route_RouteStatus_value)
}

func init() { proto.RegisterFile("route.proto", fileDescriptor_route_35e27dbdd3ab048b) }

var fileDescriptor_route_35e27dbdd3ab048b = []byte{
	// 515 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x92, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0xc7, 0x71, 0xf3, 0xd5, 0x9c, 0x0c, 0x34, 0x99, 0x09, 0xcc, 0xc4, 0x50, 0x54, 0x4d, 0x28,
	0x1a, 0x34, 0x45, 0xe5, 0x8a, 0x1b, 0x20, 0x6e, 0x23, 0x56, 0x09, 0xad, 0x95, 0x17, 0xb8, 0x18,
	0x1f, 0x93, 0xbb, 0x98, 0xcd, 0xa8, 0x6d, 0x2a, 0x3b, 0x99, 0x18, 0x57, 0x3c, 0x43, 0x1f, 0x90,
	0x07, 0xc9, 0x15, 0xaa, 0xdb, 0xb0, 0xdd, 0x58, 0xe7, 0xfc, 0xce, 0xff, 0x7c, 0xd8, 0xc7, 0x10,
	0xa8, 0xa2, 0x2a, 0x45, 0xbc, 0x54, 0x45, 0x59, 0xec, 0xc3, 0x94, 0xeb, 0xc6, 0x7e, 0x7c, 0xcd,
	0x67, 0x32, 0xe7, 0xa5, 0xe8, 0x35, 0xc6, 0x36, 0xf0, 0xe4, 0xb2, 0x28, 0x2e, 0x67, 0xa2, 0x67,
	0xbc, 0x69, 0xf5, 0xa3, 0xc7, 0x17, 0x37, 0x9b, 0x50, 0xe7, 0xaf, 0x0d, 0x0e, 0x5b, 0xd7, 0xc3,
	0xcf, 0xc0, 0xae, 0x94, 0xd4, 0x04, 0x85, 0x56, 0xe4, 0x53, 0xa8, 0xa9, 0xb7, 0x42, 0x76, 0x1b,
	0x11, 0xc4, 0x0c, 0xc7, 0x07, 0x60, 0x2f, 0xf8, 0x5c, 0x90, 0x56, 0x88, 0x22, 0x9f, 0xfa, 0x35,
	0x75, 0x95, 0xbd, 0x8b, 0x48, 0xce, 0x0c, 0xc6, 0x0f, 0xa1, 0x25, 0x73, 0x62, 0x85, 0x28, 0x0a,
	0xfa, 0x56, 0x3c, 0x1a, 0xb2, 0x96, 0xcc, 0xf1, 0x53, 0xb0, 0x73, 0xa1, 0x2f, 0x88, 0x6d, 0x72,
	0xda, 0x35, 0x75, 0x94, 0x45, 0xfe, 0xb4, 0x98, 0xa1, 0x78, 0x1f, 0xda, 0x4b, 0x25, 0x0b, 0x25,
	0xcb, 0x1b, 0xe2, 0x84, 0x28, 0x72, 0xd8, 0x7f, 0x1f, 0xff, 0x04, 0x6f, 0x2e, 0xca, 0xab, 0x22,
	0xd7, 0xc4, 0x35, 0x03, 0x4d, 0x6a, 0xea, 0xac, 0x50, 0x8b, 0xa0, 0x9a, 0xa6, 0x2b, 0x44, 0x3b,
	0xef, 0xd5, 0x5b, 0x66, 0x7d, 0x48, 0x33, 0x66, 0x4f, 0xc6, 0xa7, 0x19, 0xb3, 0x26, 0x9f, 0x32,
	0xe6, 0x0e, 0xd3, 0x8f, 0x69, 0x96, 0x32, 0x67, 0x92, 0x64, 0x83, 0x63, 0x66, 0x1f, 0xa7, 0xc9,
	0x90, 0x79, 0xe3, 0x49, 0x36, 0x1a, 0x9f, 0x9c, 0x32, 0x6f, 0x30, 0x3e, 0x39, 0x49, 0x07, 0x19,
	0x73, 0x32, 0x96, 0x0c, 0x52, 0xd6, 0x34, 0xc0, 0x14, 0x9c, 0xab, 0x42, 0x97, 0x9a, 0x78, 0xa6,
	0xd3, 0xcb, 0x9a, 0xfa, 0x2b, 0xe4, 0xae, 0xaf, 0x1e, 0xa1, 0x9a, 0x1e, 0xac, 0xd0, 0x7e, 0x87,
	0xa8, 0x47, 0xfd, 0xbd, 0xef, 0x5f, 0x8f, 0xde, 0x7d, 0x79, 0xd5, 0x7d, 0xc3, 0xbb, 0xbf, 0x93,
	0xee, 0x59, 0x37, 0x3e, 0xff, 0xf6, 0xe2, 0x90, 0x6d, 0x52, 0x71, 0x0f, 0x76, 0x94, 0x98, 0x17,
	0xa5, 0x38, 0xe7, 0x79, 0xae, 0x34, 0x69, 0x9b, 0x52, 0x3b, 0x77, 0x4b, 0xb1, 0x60, 0xa3, 0x48,
	0xd6, 0x02, 0x4c, 0xc0, 0xbe, 0xe6, 0x4a, 0x13, 0x3f, 0xb4, 0xa2, 0xa0, 0x6f, 0xc7, 0x9f, 0xb9,
	0x62, 0x86, 0xe0, 0x18, 0xbc, 0xe5, 0xac, 0xba, 0x94, 0x0b, 0x4d, 0xc0, 0x3c, 0xe7, 0x5e, 0xbc,
	0xd9, 0x5f, 0xdc, 0xec, 0x2f, 0x4e, 0x16, 0x37, 0xac, 0x11, 0xe1, 0x0e, 0x80, 0x16, 0xea, 0x5a,
	0x5e, 0x88, 0x73, 0x99, 0x93, 0xe0, 0x76, 0x03, 0xfe, 0x16, 0x8f, 0x72, 0x7c, 0x08, 0x41, 0xb5,
	0xd4, 0xa5, 0x12, 0x7c, 0xbe, 0x16, 0xed, 0xdc, 0x8a, 0xa0, 0xe1, 0xa3, 0x1c, 0x1f, 0x81, 0xab,
	0x4b, 0x5e, 0x56, 0x9a, 0xdc, 0x0f, 0x51, 0xf4, 0xa0, 0x8f, 0x63, 0xf3, 0x35, 0x36, 0xe7, 0xa9,
	0x89, 0xb0, 0xad, 0xa2, 0xf3, 0x1c, 0x82, 0x3b, 0x18, 0x07, 0xe0, 0x0d, 0xa5, 0xe6, 0xd3, 0x99,
	0xd8, 0xbd, 0x87, 0x01, 0xdc, 0x74, 0x61, 0x6c, 0x44, 0xdb, 0x67, 0x2e, 0x5f, 0x4a, 0x2d, 0x7f,
	0x4d, 0x5d, 0x33, 0xfe, 0xeb, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x06, 0xc3, 0xa3, 0xf9, 0xc0,
	0x02, 0x00, 0x00,
}
